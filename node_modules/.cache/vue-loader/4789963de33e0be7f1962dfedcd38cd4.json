{"remainingRequest":"/Users/panfangziniubi/Desktop/project/sale/node_modules/.store/vue-loader@15.11.1/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/panfangziniubi/Desktop/project/sale/src/views/FinancingDetails.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/panfangziniubi/Desktop/project/sale/src/views/FinancingDetails.vue","mtime":1662369788000},{"path":"/Users/panfangziniubi/Desktop/project/sale/node_modules/.store/cache-loader@4.1.0/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/panfangziniubi/Desktop/project/sale/node_modules/.store/babel-loader@8.3.0/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/panfangziniubi/Desktop/project/sale/node_modules/.store/cache-loader@4.1.0/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/panfangziniubi/Desktop/project/sale/node_modules/.store/vue-loader@15.11.1/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}